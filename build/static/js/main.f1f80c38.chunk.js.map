{"version":3,"sources":["components/Form.js","components/DisplayNumbers.js","components/Filter.js","services/Persons.js","components/Notification.js","App.js","index.js"],"names":["Button","props","text","Input","placeholder","value","onChange","Form","onSubmit","addName","info","newName","handleNewName","newNumber","handleNewNumber","DisplayNumbers","persons","newFilter","handleClick","filter","person","name","toLowerCase","includes","map","number","onClick","id","Filter","type","handleFilter","url","axios","get","newObject","post","deleteUrl","delete","changeUrl","put","Notification","message","className","class","App","useState","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotification","useEffect","Persons","then","response","data","catch","error","alert","addPersonInfo","event","target","preventDefault","existing","personObject","contactAlreadyExists","length","oldConctact","window","confirm","changedNumber","setTimeout","concat","personToDelete","find","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1f80c38.chunk.js","sourcesContent":["const Button = (props) => <button>{props.text}</button>\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input placeholder={props.placeholder} value={props.value} onChange={props.onChange}/>\r\n    )\r\n}\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.addName}>\r\n            <Input placeholder=\"Name Here...\" value={props.info.newName} onChange={props.info.handleNewName} />\r\n            <br></br>\r\n            <Input placeholder=\"Number Here...\" value={props.info.newNumber} onChange={props.info.handleNewNumber}/>\r\n            <br></br>\r\n            <Button text=\"Add\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","const DisplayNumbers = ({ persons, newFilter, handleClick}) => {\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {persons.filter(person =>  {\r\n                    if(newFilter === '') {\r\n                        return person\r\n                    } else if (person.name.toLowerCase().includes(newFilter.toLowerCase())) {\r\n                        return person\r\n                    } else {\r\n                        return null\r\n                    }\r\n                }).map(person => <li key={person.id}>{person.name} : {person.number} \r\n                <button onClick={() => handleClick(person.id)}>Delete</button></li>)}\r\n                \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayNumbers","const Filter = (props) => {\r\n    return (\r\n        <div>\r\n            <input type='text' placeholder='Search...' value={props.newFilter} onChange={props.handleFilter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n\r\nconst url = '/api/persons'\r\n\r\nconst getPersons = () => {\r\n    return axios.get(url)\r\n}\r\n\r\nconst postPersons = newObject => {\r\n    return axios.post(url, newObject)\r\n}\r\n\r\nconst deletePersons = (id, newObject) => {\r\n    const deleteUrl = `${url}/${id}`\r\n\r\n    return axios.delete(deleteUrl, newObject)\r\n}\r\n\r\nconst changeNumbers = (id, newObject) => {\r\n    const changeUrl = `${url}/${id}`\r\n\r\n    return axios.put(changeUrl, newObject)\r\n}\r\n\r\nexport default { getPersons, postPersons, deletePersons, changeNumbers }","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message.class}>\r\n        {message.message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Form from './components/Form'\r\nimport DisplayNumbers from './components/DisplayNumbers'\r\nimport Filter from './components/Filter'\r\nimport Persons from './services/Persons'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [newFilter, setFilter] = useState('')\r\n  const [notificationMessage, setNotification] = useState({message: null, class: null})\r\n\r\n  const handleNewName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const helperFindExisting = (existing) => {\r\n    return persons.filter(person => person.name.toLowerCase() === existing.name.toLowerCase())\r\n  }\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    let contactAlreadyExists = helperFindExisting(personObject)\r\n    if(contactAlreadyExists.length !== 0){\r\n      const oldConctact = contactAlreadyExists[0]\r\n      const replaceName = window.confirm(`${newName} is already added to the phonebook, would you like to replace the number?`)\r\n      \r\n      if(replaceName){\r\n        const changedNumber = { ...oldConctact, number: newNumber}\r\n        Persons\r\n          .changeNumbers(oldConctact.id, changedNumber)\r\n          .then(response => {\r\n            setPersons(persons.map(person => person.id !== oldConctact.id ? person : response.data))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setNotification(          \r\n              { message : `Your contact '${oldConctact.name}' has been succesfully updated!`, class : 'success'}        \r\n              )        \r\n              setTimeout(() => {          \r\n                setNotification(null)        \r\n              }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setNotification(          \r\n              { message : `Your contact '${oldConctact.name}' couldn't be updated`, class: 'error'}      \r\n              )        \r\n              setTimeout(() => {          \r\n                setNotification(null)        \r\n              }, 5000)\r\n          })\r\n      } else {\r\n        Persons\r\n        .postPersons(personObject)\r\n        .then(response => {\r\n          setPersons(persons.concat(response.data))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          setNotification(          \r\n            { message : `Your contact '${oldConctact.name}' couldn't be added` , class: 'error'}  \r\n            )        \r\n            setTimeout(() => {          \r\n              setNotification(null)        \r\n            }, 5000)\r\n        })\r\n      }\r\n    }\r\n    Persons\r\n    .postPersons(personObject)\r\n    .then(response => {\r\n      setPersons(persons.concat(response.data))\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setNotification(         \r\n        { message : `Your contact '${personObject.name}' has been succesfully added!` , class: 'success'}       \r\n        )        \r\n        setTimeout(() => {          \r\n          setNotification(null)        \r\n        }, 5000)\r\n    })\r\n    .catch(error => {\r\n      setNotification(          \r\n        { message : `Your contact '${personObject.name}' couldn't be added` , class: 'error'}    \r\n        )        \r\n        setTimeout(() => {          \r\n          setNotification(null)        \r\n        }, 5000)\r\n    })\r\n  }\r\n\r\n  const personsAPI = () => {\r\n    Persons\r\n      .getPersons()\r\n      .then(response => {\r\n        setPersons(response.data)\r\n      })\r\n      .catch(error => {\r\n        alert('There was a problem leading the data')\r\n      })\r\n  }\r\n\r\n  useEffect(personsAPI, [])\r\n\r\n  const addPersonInfo = {\r\n    newName,\r\n    newNumber,\r\n    handleNewName,\r\n    handleNewNumber,\r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    const personToDelete = persons.find(person => person.id === id)\r\n\r\n    const deleteConfirmation = window.confirm(`Delete ${personToDelete.name}?`)\r\n\r\n    if(deleteConfirmation){\r\n      Persons\r\n      .deletePersons(id)\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setPersons(persons.map(person => person.id !== id ? person : response.data))\r\n        setNotification(          \r\n          { message : `Your contact has been succesfully deleted` , class: 'error'}         \r\n          )        \r\n          setTimeout(() => {          \r\n            setNotification(null)        \r\n          }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setNotification(          \r\n          { message : `Your contact was already removed from the server` , class: 'error'}         \r\n          )        \r\n          setTimeout(() => {          \r\n            setNotification(null)        \r\n          }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={notificationMessage} />\r\n      <Filter newFilter={newFilter} handleFilter={handleFilter}/>\r\n      <br></br>\r\n      <h2>Add A New Contact!</h2>\r\n      <Form addName={addName} info={addPersonInfo}/>\r\n      <h2>Numbers</h2>\r\n      <DisplayNumbers persons={persons} newFilter={newFilter} handleClick={deletePerson}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}